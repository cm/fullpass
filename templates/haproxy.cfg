global
    log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

defaults
    log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000

frontend http
    mode http
    bind *:80
    acl letsencrypt-request path_beg -i /.well-known/acme-challenge/
    acl fullpass hdr(host) -i www.fullpass.in
    acl admin hdr(host) -i admin.fullpass.in
    acl weekonekt hdr(host) -i www.weekonekt.com
    redirect scheme https code 301 if !letsencrypt-request
    use_backend admin-backend if admin
    use_backend weekonekt-backend if weekonekt
    use_backend fullpass-backend if fullpass

frontend https
    bind *:443 ssl crt /etc/letsencrypt/combined/
    acl fullpass hdr(host) -i www.fullpass.in
    acl admin hdr(host) -i admin.fullpass.in
    acl weekonekt hdr(host) -i www.weekonekt.com
{% for s in stores %}
    acl {{ s.name }} path_beg -i /{{ s.name }}
{% endfor  %}
    #use_backend admin-backend if admin
    #use_backend weekonekt-backend if weekonekt
    #use_backend fullpass-backend if fullpass
{% for s in stores %}
    use_backend {{ s.name }} if {{ s.name }}
{% endfor  %}


backend admin-backend
    balance roundrobin
{% for h in groups.all %}
    server {{ h }} {{h}}:8082 check    
{% endfor  %}

backend fullpass-backend
    balance roundrobin
{% for h in groups.all %}
    server {{ h }} {{h}}:8081 check    
{% endfor  %}

backend weekonekt-backend
    balance roundrobin
{% for h in groups.all %}
    server {{ h }} {{h}}:8080 check    
{% endfor  %}

{% for s in stores %}
backend {{ s.name }}
    balance roundrobin
    http-request set-path %[path,regsub(/{{ s.name }},)]
{% for h in s.hosts %}
    server {{ h }} {{h}}:{{ s.port }} check    
{% endfor  %}
{% endfor  %}
